/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mensajeriaweb;

import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.JApplet;
import javax.swing.JOptionPane;

/**
 *
 * @author Cesar Madrid
 */
public class web extends JApplet {

    /**
     * Creates new form mensajero
     */
    int PUERTO = 5000;
    String DIR = "10.0.0.17";
    Socket mens;
    String NICK;
    int id;
    JApplet este = this;
    public web() {
        initComponents();
        mensajes.setLineWrap(true);
        mensajes.setWrapStyleWord(true);
        DIR = JOptionPane.showInputDialog(this,"Indique el servidor a conectarse",JOptionPane.QUESTION_MESSAGE);
        NICK = JOptionPane.showInputDialog(this,"Ingrese su nick",JOptionPane.QUESTION_MESSAGE);
        if(NICK==null)
            NICK="UsuarioAnónimo";
        System.out.println(NICK);
       // setTitle(NICK+" - Aplicacion de Mensajeria");
        

        try {
            mens = new Socket(DIR,PUERTO);
            id = Integer.parseInt((new DataInputStream((mens.getInputStream()))).readUTF());
            final Llegada llegada = new Llegada();
            Thread llega = new Thread(llegada);
            llega.start();
            
            
//                    addWindowListener(new WindowAdapter(){
//        public void windowClosing(WindowEvent we){
//        int eleccion = JOptionPane.showConfirmDialog(este, "Desea salir?");
//        if ( eleccion == 0) {
//            JOptionPane.showMessageDialog(este, "saliendo del sistema...");
//            try {
//                new ObjectOutputStream(mens.getOutputStream()).writeObject("ƒƒcerrarƒƒ"+"ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ"+NICK+"\n");
//                System.out.println("paso la prueba");
//            } catch (IOException ex) {
//                System.out.println("no se envio el cerrar");
//            }
////            
//            llegada.detener();
//            System.exit(0);
//        }   
//    }
//});
            
            
            
        } catch (UnknownHostException ex) {
            System.out.println("error no se cual");
        } catch (IOException ex) {
            System.out.println("ootro no s cual");
        }
        
    }
    
    public class Llegada implements Runnable{
        boolean running =true;
        @Override
        public void run() {
            try {
               while(running){
                int pos=0;
                DataInputStream entra = new DataInputStream((mens.getInputStream()));
                String men = entra.readUTF().substring(20);
                for(int h=0;h<men.length();h++)
                    if(men.charAt(h)==':'){
                        pos=h;
                        h=999;
                    }
                        
                   if(men.substring(0, pos).equals(NICK))
                       men="Yo"+men.substring(pos);
                //mensajes.setText(mensajes.getText()+men+"\n");
                mensajes.append(men+"\n");
                //mantener el scroll abajo
                int x;
                mensajes.selectAll();
                x = mensajes.getSelectionEnd();
                mensajes.select(x,x);
               }
            } catch (Exception e) {
                System.out.println("error en actualizar el chat");
                run();
            }
        }
        
        public void detener(){
        
            running = false;
        }
        
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mensajes = new javax.swing.JTextArea();
        msj = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

//        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        mensajes.setEditable(false);
        mensajes.setColumns(20);
        mensajes.setRows(5);
        jScrollPane1.setViewportView(mensajes);

        msj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                msjKeyPressed(evt);
            }
        });

        jLabel1.setText("Sistema de Mensajeria");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(msj)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(msj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

   //     pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msjKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_msjKeyPressed

        int key=evt.getKeyCode();
    
        if(key==KeyEvent.VK_ENTER)
        { 
            if(!msj.getText().equalsIgnoreCase("")){
                try {

                ObjectOutputStream mensaje = new ObjectOutputStream(mens.getOutputStream());
                mensaje.writeObject("ƒƒƒƒƒƒƒƒƒƒƒƒƒ"+NICK+": "+msj.getText()+"\n");
                msj.setText(null);
                } catch (Exception e) {
                }
            }
        }
    
        // TODO add your handling code here:
    }//GEN-LAST:event_msjKeyPressed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(mensajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(mensajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(mensajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(mensajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new mensajero().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mensajes;
    private javax.swing.JTextField msj;
    // End of variables declaration//GEN-END:variables
}
