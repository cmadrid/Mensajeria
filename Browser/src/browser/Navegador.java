/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package browser;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;

/**
 *
 * @author Cesar Madrid
 */
public class Navegador extends javax.swing.JFrame {

    Socket conexion = new Socket();
    Cargar cargar = new Cargar();
    Thread carga;
    JFrame este = this;
    ArrayList<String> Historial = new ArrayList<>();
    int num=-1;
    /**
     * Creates new form Navegador
     */
    public Navegador() {
        initComponents();
        Tab1.setTabComponentAt(0, new Pesta√±as());
        carga = new Thread(cargar);
        carga.start();
        Nav.setContentType("text/html");
        Nav.setEditable(false);
        Nav.addHyperlinkListener(new HyperlinkListener() {
    public void hyperlinkUpdate(HyperlinkEvent e) {
        if(e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
//           JOptionPane.showMessageDialog( null, e.getURL().toString());
           cargar.setUrl(e.getURL().toExternalForm());
           int temp = Historial.size();
            if(temp!=num+1)
                for(int i=num+1;i<temp;i++)
                    Historial.remove(i);
           Historial.add(e.getURL().toExternalForm());
           num++;
           cargar.cargarPag();
           Adelante.setEnabled(false);
           
           
        }
    }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        url = new javax.swing.JTextField();
        Atras = new javax.swing.JButton();
        Adelante = new javax.swing.JButton();
        Recargar = new javax.swing.JButton();
        Tab1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        Nav = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        url.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                urlKeyPressed(evt);
            }
        });

        Atras.setText("Atras");
        Atras.setEnabled(false);
        Atras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AtrasMouseReleased(evt);
            }
        });

        Adelante.setText("Adelante");
        Adelante.setEnabled(false);
        Adelante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AdelanteMouseReleased(evt);
            }
        });

        Recargar.setText("Recargar");
        Recargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RecargarMouseReleased(evt);
            }
        });

        jScrollPane2.setViewportView(Nav);

        Tab1.addTab("tab1", jScrollPane2);

        jScrollPane1.setViewportView(jTextPane1);

        Tab1.addTab("tab2", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tab1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Atras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Adelante)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Recargar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(url, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Atras)
                    .addComponent(Adelante)
                    .addComponent(Recargar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tab1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void urlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_urlKeyPressed

        int key=evt.getKeyCode();
    
        if(key==KeyEvent.VK_ENTER)
        {
            cargar.setUrl(url.getText());
            int temp = Historial.size();
            if(temp!=num+1)
                for(int i=num+1;i<temp;i++)
                    Historial.remove(i);
           Historial.add(url.getText());
           num++;
            cargar.cargarPag();
            Adelante.setEnabled(false);
        
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_urlKeyPressed

    private void AtrasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtrasMouseReleased
        if(Atras.isEnabled()){
            num--;
            cargar.setUrl(Historial.get(num));
    //        if(Historial.size()!=num+1)
    //            System.out.println("ohlasdasd");
            cargar.cargarPag();
            Adelante.setEnabled(true);
            if(num==0)
                Atras.setEnabled(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_AtrasMouseReleased

    private void AdelanteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdelanteMouseReleased
        if(Adelante.isEnabled()){
            cargar.setUrl(Historial.get(num+1));
            num++;
            cargar.cargarPag();
            if(Historial.size()==num+1)
                Adelante.setEnabled(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_AdelanteMouseReleased

    private void RecargarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RecargarMouseReleased

        cargar.cargarPag();
        // TODO add your handling code here:
    }//GEN-LAST:event_RecargarMouseReleased
public class Cargar implements Runnable{
        
    boolean correr=false;
    boolean continuar=true;
    String Url="";
        @Override
        public void run() {
            while(true){
                try {
                    Thread.sleep(50);
                    if(correr){
                        Nav.removeAll();
                        url.setText(Url);
                        Url =Url.replaceAll("http://", "");
                        if(!Url.contains("/"))
                            Url=Url+"/";
                        String cadenas[]=Url.split("/");
                        System.out.println(Url.substring(cadenas[0].length()));
                        String servidor=cadenas[0];
                        String pagina =Url.substring(cadenas[0].length());
                        conexion.close();
                        conexion=new Socket(InetAddress.getByName(servidor), 80);
                        System.out.println(pagina+' '+servidor);
                        String requerimiento="\n\n\n\nGET "+pagina+" HTTP/1.1\nHost: "+servidor+"\n\n\n";

                        PrintWriter pw = new PrintWriter(conexion.getOutputStream());
                        pw.print(requerimiento);
                        pw.flush();
                        String guardar;
                        BufferedReader in = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
                        guardar = in.readLine();
                        continuar=true;
                        while(continuar){
                            String linea= in.readLine();
                            
                            if(linea!=null)
                                guardar = guardar+"\n" +linea;
                            if(linea.toUpperCase().contains("</BODY>"))
                                continuar=false;
                        }
                        String[] codigo =guardar.split("<");
                        String ultimo= guardar.substring(codigo[0].length());
                        System.out.println(ultimo);
                        System.out.println("1");
                        Nav.setText(ultimo);
                        System.out.println("2");
                        Pesta√±as p1 = new Pesta√±as();
                        Tab1.setTabComponentAt(0, p1);
                        if(ultimo.toUpperCase().contains("<TITLE>")){
                            este.setTitle(ultimo.substring(ultimo.toUpperCase().indexOf("<TITLE>")+7, ultimo.toUpperCase().indexOf("</TITLE>")));
                            p1.setTitle(ultimo.substring(ultimo.toUpperCase().indexOf("<TITLE>")+7, ultimo.toUpperCase().indexOf("</TITLE>")));
                        }
                        else{
                            este.setTitle(Url);
                            p1.setTitle(Url);
                        }
                        correr=false;
                        if(num!=0)
                            Atras.setEnabled(true);
                    }
                
                } catch (IOException ex) {
    //                Logger.getLogger(Navegador.class.getName()).log(Level.SEVERE, null, ex);
                    Nav.setText("<h>Error: Pagina no encontrada</h>");
                    correr=false;
                } catch (InterruptedException ex) {
                Logger.getLogger(Navegador.class.getName()).log(Level.SEVERE, null, ex);
                }catch(Exception e){
                    Nav.setText("<h>Error: Pagina no encontrada</h>");
                    correr=false;
                }
            
            }
            
        }
        
        public void cargarPag(){
            continuar=false;
            
            correr=true;
        }
        public void setUrl(String url){
            Url=url;
        }

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Navegador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Navegador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Navegador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Navegador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Navegador().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Adelante;
    private javax.swing.JButton Atras;
    private javax.swing.JTextPane Nav;
    private javax.swing.JButton Recargar;
    private javax.swing.JTabbedPane Tab1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField url;
    // End of variables declaration//GEN-END:variables
}
